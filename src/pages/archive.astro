---
import Layout from "../layouts/Layout.astro";
import "@/styles/global.css";
import { Badge } from "@/components/ui/badge";

const pageTabTitle = "Project Archive | Xavier Khew";

const siteLink = "";

import {
  Table,
  TableBody,
  // TableCaption,
  TableCell,
  TableHead,
  TableHeader,
  TableRow,
} from "@/components/ui/table";
import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from "@/components/ui/card";

const archiveList = [
  {
    logicYear: "2023",
    printYear: "2023",
    project: "Hartalega NGX",
    description: "Developed a digital clone of their physical factory in Malaysia, improving client sales by 80% and increasing click-through rates by 68%. Managed the project lifecycle, timelines, and stakeholder expectations. Led a team of developers while contributing to hands-on coding and communication with clients. Led a groundbreaking project that gained national recognition in the healthcare industry as the first to develop and launch an immersive factory tour.\n**Silver Award for Excellence in B2B Marketing &** \n**Bronze for Excellence in Interactive Marketing/AR & VR in Marketing Interactive, Marketing Excellence Awards 2024**",
    madeAt: "Accenture Song",
    builtWith: [
      "HTML",
      "Animate.css",
      "SCSS",
      "Bootstrap 5",
      "GSAP",
      "Javascript",
      "JQuery",
      "Three JS",
      "Vite",
    ],
  },
  {
    logicYear: "2022",
    printYear: "2022",
    project: "RHB Cards",
    description:
      "Revamped the debit, credit, prepaid cards, and rewards segments, resulting in a 90% increase in user engagement and a 55% boost in click-through rates. Coordinated with clients and stakeholders to manage expectations throughout the project.\n**Gold Award for Excellence in Relationship Marketing in Marketing Interactive, Marketing Excellence Awards 2023**",
    madeAt: "Accenture Song",
    builtWith: ["HTML", "CSS", "SCSS", "Bootstrap 4", "JavaScript", "Slick"],
  },
  {
    logicYear: "2022",
    printYear: "2022",
    project: "TM Blog",
    description: "Created a corporate blog for showcasing leadership articles and engaging the public.",
    madeAt: "Accenture Song",
    builtWith: [
      "HTML",
      "CSS",
      "SCSS",
      "Bootstrap 4",
      "JavaScript",
      "JQuery",
      "Moment.js",
      "Slick",
    ],
  },
  {
    logicYear: "2022",
    printYear: "2022",
    project: "TM Brand Centre",
    description: "Built a corporate brand centre website to serve as a reference point for internal and external vendors regarding brand guidelines.",
    madeAt: "Accenture Song",
    builtWith: ["HTML", "CSS", "SCSS", "Bootstrap 4", "JQuery", "Slick"],
  },
  {
    logicYear: "2022",
    printYear: "2022",
    project: "Unifi Business",
    description: "Revamped the business product segment website, focusing on user-friendly information architecture and engaging micro-interactions.",
    madeAt: "Accenture Song",
    builtWith: ["HTML", "CSS", "Bootstrap 4", "Javascript", "JQuery", "Slick"],
  },
  {
    logicYear: "2021-2023",
    printYear: "2021-2023",
    project: "Eucerin",
    description: "Developed and distributed weekly EDMs for registered loyalty program customers. Maintained and enhanced the existing loyalty website.",
    madeAt: "Accenture Song",
    builtWith: ["HTML", "CSS", "Bootstrap 3", "Javascript"],
  },
  {
    logicYear: "2021",
    printYear: "2021",
    project: "Desaru Coast",
    description: "Revamped the website to improve visual appeal and user flow, leading to an 83% retention rate, a 74% increase in click-through rates, and a 30% boost in booking conversions.",
    madeAt: "Accenture Song",
    builtWith: ["HTML", "CSS", "Bootstrap 4", "Javascript", "Slick"],
  },
  {
    logicYear: "2021",
    printYear: "2021",
    project: "Eve Holdings",
    description: "Improved the UX of the existing website while preserving micro-interactions.",
    madeAt: "Accenture Song",
    builtWith: [
      "HTML",
      "CSS",
      "Bootstrap 4",
      "Javascript",
      "JQuery",
      "GSAP",
      "Slick",
    ],
  },
];
---

<Layout title={pageTabTitle}>
  <a
    href={`/${siteLink}`}
    class='flex items-center text-base lg:text-lg icon-left w-fit'
    transition:animate='slide'
  >
    <svg
      xmlns='http://www.w3.org/2000/svg'
      width='22'
      height='22'
      fill='currentColor'
      class='bi bi-arrow-left'
      viewBox='0 0 16 16'
    >
      <path
        fill-rule='evenodd'
        d='M15 8a.5.5 0 0 0-.5-.5H2.707l3.147-3.146a.5.5 0 1 0-.708-.708l-4 4a.5.5 0 0 0 0 .708l4 4a.5.5 0 0 0 .708-.708L2.707 8.5H14.5A.5.5 0 0 0 15 8'
      ></path>
    </svg>
    <span class='ms-xxxxs'>Xavier Khew</span>
  </a>

  <div class='text-lg font-medium lg:text-xl pb-xs'>
    Other Things I've Built
  </div>

  <Table className='hidden md:table'>
    <TableHeader>
      <TableRow>
        <TableHead>Year</TableHead>
        <TableHead>Project</TableHead>
        <TableHead className='hidden md:table-cell'>Description</TableHead>
        <TableHead className='hidden md:table-cell'>Made at</TableHead>
        <TableHead className="md:w-[150px] lg:w-[240px] xl:w-[280px]">Built with</TableHead>
      </TableRow>
    </TableHeader>
    <TableBody>
      {
        archiveList
          .map((invoice) => ({
            ...invoice,
            year: parseInt(invoice.logicYear),
          })) // Extract year from invoice
          .sort((a, b) => b.year - a.year) // Sort archiveList by year in descending order
          .map((archive) => (
            <TableRow key={archive.year}>
              <TableCell>{archive.printYear}</TableCell>
              <TableCell>{archive.project}</TableCell>
              <TableCell className='hidden md:table-cell'>
                {/* Render the description with formatting */}
                {archive.description.split("\n").map((line, index) => (
                  <p>
                    {line.includes("**") ? (
                      <strong>
                        {line.replace(/\*\*(.*?)\*\*/g, (_, p1) => p1)}
                      </strong>
                    ) : line.includes("[") && line.includes("]") ? (
                      line.split("[").map((part, index) => {
                        if (index === 0) return part;
                        const [text, url] = part.split("](");
                        return (
                          <>
                            <a href={url.replace(")", "")}>{text}</a>
                            {index < line.split("[").length - 1 ? "[" : ""}
                          </>
                        );
                      })
                    ) : (
                      line
                    )}
                  </p>
                ))}
              </TableCell>
              <TableCell className='hidden md:table-cell'>
                {archive.madeAt}
              </TableCell>
              <TableCell>
                {archive.builtWith ? (
                  archive.builtWith.map((skill, index) => (
                    <Badge key={index}>{skill}</Badge>
                  ))
                ) : (
                  <span>No Data</span>
                )}
              </TableCell>
            </TableRow>
          ))
      }
    </TableBody>
  </Table>

  <div class="grid gap-6 grid-cols-1">
    {archiveList
      .map((invoice) => ({
        ...invoice,
        year: parseInt(invoice.logicYear),
      }))
      .sort((a, b) => b.year - a.year)
      .map((archive) => (
        <Card key={archive.year} className="flex flex-col md:hidden bg-transparent border border-[#36363652] rounded-xl shadow-none">
          <CardHeader>
            <div className="flex justify-between items-center">
              <h3 className="font-semibold">Project: {archive.project}</h3>
              <span className="text-muted-foreground">Year: {archive.printYear}</span>
            </div>
          </CardHeader>
          <CardContent className="flex-1">
            <div className="space-y-4">
              <div className="text-sm">
                Description:
                {archive.description.split("\n").map((line, index) => (
                  <p key={index} className="mb-2">
                    {line.includes("**") ? (
                      <strong>
                        {line.replace(/\*\*(.*?)\*\*/g, (_, p1) => p1)}
                      </strong>
                    ) : line.includes("[") && line.includes("]") ? (
                      line.split("[").map((part, index) => {
                        if (index === 0) return part;
                        const [text, url] = part.split("](");
                        return (
                          <React.Fragment key={index}>
                            <a 
                              href={url.replace(")", "")}
                              className="text-blue-500 hover:underline"
                            >
                              {text}
                            </a>
                            {index < line.split("[").length - 1 ? "[" : ""}
                          </React.Fragment>
                        );
                      })
                    ) : (
                      line
                    )}
                  </p>
                ))}
              </div>
            </div>
          </CardContent>
          <CardFooter className="flex-col items-start gap-6">
            {archive.madeAt && (
                <div className="text-sm text-muted-foreground">
                  Made at: {archive.madeAt}
                </div>
              )}
              <div className="flex flex-wrap gap-2">
                <p>Built with:</p>
                {archive.builtWith ? (
                  archive.builtWith.map((skill, index) => (
                    <Badge key={index}>
                      {skill}
                    </Badge>
                  ))
                ) : (
                  <span className="text-muted-foreground">No Data</span>
                )}
              </div>
          </CardFooter>
        </Card>
      ))}
  </div>

  
</Layout>
